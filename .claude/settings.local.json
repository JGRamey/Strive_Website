{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(python3:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(python3:*)",
      "Bash(__NEW_LINE__ echo \"Directory structure:\")",
      "Bash(ls:*)",
      "Bash(__NEW_LINE__ echo \"File line counts:\")",
      "Bash(__NEW_LINE__ echo \"Archive verification:\")",
      "Bash(__NEW_LINE__ echo \"üìã Chat Log Status:\")",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(grep:*)",
      "Bash(for:*)",
      "Bash(do wc:*)",
      "Bash(done)",
      "Bash(python:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__list_dir",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__read_memory",
      "mcp__serena__list_dir",
      "mcp__serena__list_memories",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__get_symbols_overview",
      "WebFetch(domain:qdrant.tech)",
      "WebFetch(domain:python-client.qdrant.tech)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__memory__read_graph",
      "mcp__serena__find_file",
      "mcp__serena__think_about_collected_information",
      "Bash(/Users/grant/.pyenv/versions/3.12.11/bin/python -c \"\nimport streamlit, pandas, httpx, plotly\nprint('‚úÖ All core packages available')\n\")",
      "Bash(/Users/grant/.pyenv/versions/3.12.11/bin/python -c \"\nimport sys\nsys.path.append('.')\ntry:\n    # Test importing the operations console query interface directly  \n    from pages.operations_console.query_interface import show_query_editor\n    print('‚úÖ Import successful - No relative import issue')\nexcept ImportError as e:\n    print(f'‚ùå Import error confirmed: {e}')\nexcept Exception as e:\n    print(f'‚ùå Other error: {e}')\n\")",
      "Bash(/Users/grant/.pyenv/versions/3.12.11/bin/python -c \"\nimport sys\nsys.path.insert(0, '.')\ntry:\n    # This simulates the actual failing import from the Operations Console file\n    from .operations_console.query_interface import show_query_editor\n    print('‚úÖ Relative import works')\nexcept ImportError as e:\n    print(f'‚ùå Relative import error confirmed: {e}')\nexcept SyntaxError as e:\n    print(f'‚ùå Syntax error (expected for relative import): {e}')\nexcept Exception as e:\n    print(f'‚ùå Other error: {e}')\n\")",
      "Bash(/Users/grant/.pyenv/versions/3.12.11/bin/python:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(PYTHONPATH=/Users/grant/Documents/GitHub/MCP_Ygg /Users/grant/.pyenv/versions/3.12.11/bin/python api/fastapi_main.py)",
      "Bash(pkill:*)",
      "WebFetch(domain:docs.google.com)",
      "Bash(powershell:*)",
      "Read(C:\\Users\\zochr\\AppData\\Roaming\\Claude/**)",
      "Bash(uvx mcp-serena:*)",
      "Bash(uv search:*)",
      "Bash(uvx:*)",
      "Bash(pip index versions:*)",
      "Bash(set SERENA_PROJECT_PATH=C:UserszochrDesktopGitHubStrive_Wwebsite_Replit)",
      "Bash(git clone:*)",
      "Read(C:\\Users\\zochr\\AppData\\Roaming\\Code\\User/**)",
      "Read(C:\\Users\\zochr\\.vscode\\extensions\\anthropic.claude-code-1.0.98/**)",
      "Read(C:\\Users\\zochr\\.vscode\\extensions\\anthropic.claude-code-1.0.98/**)",
      "Read(C:\\Users\\zochr\\.vscode\\extensions\\anthropic.claude-code-1.0.98/**)",
      "Bash(test:*)",
      "Read(C:\\Users\\zochr\\Desktop\\GitHub\\Strive_Wwebsite_Replit\\.claude/**)",
      "Read(C:\\Users\\zochr\\Desktop\\GitHub\\Strive_Wwebsite_Replit\\.serena/**)",
      "Read(C:\\Users\\zochr\\.serena/**)",
      "Read(C:\\Users\\zochr\\.serena/**)",
      "WebFetch(domain:github.com)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "WebSearch",
      "mcp__serena__activate_project",
      "Bash(del \"C:\\Users\\zochr\\Desktop\\GitHub\\Strive_Website_Replit\\.claude\\agents\\evaluator.md\")",
      "Bash(npm install:*)",
      "Bash(npm run test:run:*)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "Bash(tsx:*)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(npx:*)",
      "Read(//home/runner/**)",
      "Bash(command:*)",
      "Bash(pip3 install:*)",
      "Bash(echo $NODE_ENV)",
      "Bash(echo \"REPL_ID: $REPL_ID\")",
      "Bash(echo:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_install",
      "WebFetch(domain:51de729c-bd38-455d-b593-3d576c21f424-00-knr49tw9vspk.kirk.replit.dev)",
      "Bash(npm search:*)",
      "Bash(source:*)",
      "Bash(export PATH=\"/home/runner/workspace/.local/bin:$PATH\")",
      "mcp__serena__read_file",
      "mcp__serena__write_memory",
      "mcp__serena__replace_regex",
      "Bash(cat:*)",
      "mcp__serena__create_text_file"
    ],
    "deny": []
  },
  "enabledMcpjsonServers": [
    "serena"
  ]
}